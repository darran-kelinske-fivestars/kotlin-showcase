apply plugin: 'base'

clean.doLast {
  file("platforms/android/assets/www").deleteDir()
  file("platforms/android/build").deleteDir()
  file("www/css").deleteDir()
  file("www/js").deleteDir()
  file("www/webclient_main").deleteDir()
  file("www/index.html").delete()
  file("www/config.xml").delete()
  file("www/webclient_main.js").delete()
  file("www/webclient_main.js.map").delete()
  file("www/webclient_main.meta.js").delete()
  file("www/lib").deleteDir()
}

task copyWebClientExceptHtml(type: Copy) {
  from("${project(':webclient').projectDir}/src/main/web")
  from("${project(':webclient').projectDir}/build/classes/main")
  include("**/*")
  exclude("webclient_main")
  exclude("index.html")
  into("www")
  rename { String fileName -> fileName.replace("webclient_main.js", "js/index.js") }
}

copyWebClientExceptHtml.dependsOn(clean)

// kotlin.js and Yested.js must exist.  Follow the instructions in ../README.md to generate them.
copyWebClientExceptHtml.doFirst {
  assert file("${project(':webclient').projectDir}/build/classes/main/lib/kotlin.js").exists()
  assert file("${project(':webclient').projectDir}/build/classes/main/lib/Yested.js").exists()
}

// Copy webclient files
// Automatically copies files from the webclient module to this module.
// This allows sharing code between the two modules and enables using KotlinJS

task copyWebClientHtml(type: Copy) {
  from("${project(':webclient').projectDir}/src/main/web")
  include("index.html")
  into("www")
  filter { String line -> line
    .replaceAll("<!--CORDOVA (.*?)-->", "\\1")
    .replace("../../build/classes/main/", "")
    .replace("webclient_main.", "js/index.") }
}

task prepareMobile(type: Copy) {
  from("resources")
  include("logo.png")
  into("www/img")
}
prepareMobile.dependsOn(copyWebClientExceptHtml)
prepareMobile.dependsOn(copyWebClientHtml)

task makeZip(type: Zip) {
   from './'
   exclude 'build/'
   exclude 'publish-folder/'
   exclude 'platforms/'
   exclude 'plugins/'
   exclude 'node_modules/'
   exclude 'hooks/before_prepare/'
   archiveName "PhoneGap.zip"
   destinationDir(buildDir)
}
makeZip.dependsOn(prepareMobile)
